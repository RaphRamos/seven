<main id="main">
  <div class="container">
    <div class="fixedContainer">

      <h4>Bookings</h4>
      <p>Please fill out the information below to schedule your appointment with Seven Migration.</p>
      <p>If you are a returning client, please fill in your email address and we'll search for your details.</p>

      <div id="smartwizard">
        <ul>
          <li><a href="#step-1">Consultation Type</a></li>
          <li><a href="#step-2">Contact Details</a></li>
          <li><a href="#step-3">Select a Date & Time</a></li>
          <li><a href="#step-4">Payment</a></li>
        </ul>
        <div>
          <%= render 'step_1' %>
          <%= render 'step_2' %>
          <%= render 'step_3' %>
          <%= render 'step_4' %>
        </div>
      </div>

    </div>
  </div>
  <%= render 'shared/modals/terms_of_service' %>
</main>

<script type="text/javascript">
  function updateServices(location) {
    // location: 1 - Perth, 2 - Australia, 3 - Outside Australia
    // Habilita todos os servicos

    if (location === '1') {
      $('#serviceRadio1').attr('disabled', false);
      $('#serviceRadio3').attr('disabled', false);
      $('label[for="serviceRadio1"]').trigger('click');
    }else if (location === '2') {
      $("#serviceRadio1").attr('disabled', true);
      $('#serviceRadio3').attr('disabled', false);
      $('label[for="serviceRadio2"]').trigger('click');
    } else if (location === '3') {
      $("#serviceRadio1").attr('disabled', true);
      $("#serviceRadio3").attr('disabled', true);
      $('label[for="serviceRadio2"]').trigger('click');
    }

    return true;
  }

  function updateAgent(agent) {
    var AGENT = {
      CLAUDIO: {
        name: 'Claudio Garzini',
        photo: '<%= asset_path 'claudio_edit_.png' %>',
        description: `
        <p class="text-justify"> Claudio is an Australian Migration Law graduate and a Registered Migration Agent (MARN 1803676) who has been a valuable member of Seven Migration team since 2016.</p>
        <p class="text-justify"> Prior to coming to Australia, Claudio worked for more than 6 years as an Education Consultant and Student Agency Manager in Brazil, his home country.</p>
        <p class="text-justify"> Having helped over 400 clients seeking to study in Australia during this time, his expertise in dealing with Australian migration law surpasses that of experience at Seven Migration.</p>`
      },
      ANA: {
        name: 'Ana Julia',
        photo: '<%= asset_path 'ana.png' %>',
        description: `
        <p class="text-justify"> Ana Julia Carusi is a Registered Migration Agent who graduated at the Australian National University. She is the Managing Director of Seven Migration and also Managing Director of Information Planet Perth, specialized in services for international students.</p>
        <p class="text-justify"> Originally from Brazil, Ana Julia has been in Australia for the past 10 years assisting migrants to reach their dreams. She is also a member of the Migration Institute of Australia (MIA).</p>
        <p class="text-justify"> MARN 157155 </p>
        `
      }
    };

    var AGENT_ENUM = {
      '1': 'ANA',
      '2': 'CLAUDIO'
    };

    function buildAgentCode(data) {
      return `
        <img class="mr-3 rounded-circle" src="${data.photo}" alt="${data.name}">
        <div class="media-body">
          <h5 class="mt-0">About ${data.name}</h5>
          <hr />
          ${data.description}
        </div>
      `;
    }

    var selectedAgent = AGENT_ENUM[agent]
    var agentData =  AGENT[selectedAgent]

    if (agentData == null) {
      console.error('no agent found')
      return false
    }
    $('#agentMedia').html(buildAgentCode(agentData));
  }

  function rebuildTimetable(date) {
    var agent = $('input[name="agentRadio"]:checked').val();
    var service = $('input[name="serviceRadio"]:checked').val();
    var email =   $('#clientEmail').val();

    var params = { agent_id: agent, service_id: service, date: date, clientEmail: email };

    $('#available-times-container').html('<i class="fas fa-spinner"></i>');
    $.get("/event/fetch_timetable", params).done(function(resp) {
      if (resp.timetable.length > 0) {
        var availableTimesList = resp.timetable.map((time, i) => {
          return `
          <input type="radio" id="availableTime${i}" name="availableTimeRadio"
          class="custom-control-input" value="${time}" />
          <label for="availableTime${i}">${time}</label>
          `;
        });

        $('#available-times-container').html(availableTimesList);
        $('input[type="radio"][name="availableTimeRadio"]').checkboxradio({
          icon: false
        });
      } else {
        $('#available-times-container').html('<div>No time available on this date.</div>');
      }
    }).fail(function(resp) {
      $('#available-times-container').html('<div>Fail to load timetables!!!!</div>');
    });
  }

  function updateBlockedDays(date) {
    var agent = $('input[name="agentRadio"]:checked').val();
    var service = $('input[name="serviceRadio"]:checked').val();
    var email =   $('#clientEmail').val();

    var params = { agent_id: agent, service_id: service, date: date, clientEmail: email };

    $.get("/event/fetch_blocked_days", params).done(function(resp) {
      $('#new_calendar').datepicker('setDatesDisabled', resp.blocked_days);
    });
  }

  function getClientByEmail(email) {
    $.get("/client_by_email", {email: email}).done(function(data) {
      if (data.client) {
        $("#clientName").val(data.client.name);
        $("#clientPhone").val(data.client.phone);
        $("#referenceSelector").val(data.client.reference);
        $("#clientVideocallId").val(data.client.videocall);
      }
    });
  };

  $(document).ready(function(){
    updateAgent($('input[name="agentRadio"]:checked').val());

    $('input[name="locationRadio"]').on('change', function() {
      updateServices($(this).val());
    });

    $('input[name="agentRadio"]').on('change', function() {
      updateAgent($(this).val());
    });

    $('input[type="radio"]').checkboxradio({
      icon: false
    });

    $('#clientEmail').on('change', function() {
      getClientByEmail($(this).val());
    });

    $('#smartwizard').smartWizard({
      theme: 'seven',
      showStepURLhash: false,
      useURLhash: false,
      lang: {  // Language variables
        next: 'Next',
        previous: 'Back'
      }
    });

    $("#smartwizard").on("showStep", function(e, anchorObject, stepNumber, stepDirection) {

      $('button.sw-btn-prev').removeClass('sw-btn-last');

      if (stepNumber === 2) {
       updateBlockedDays(new Date());
      }

      if (stepNumber === 3) {
       var form1 = $('#form-1').serialize();
       var form2 = $('#form-2').serialize();
       var form3 = $('#form-3').serialize();
       var params = `${form1}&${form2}&${form3}`;

       $.get("/event/register_booking", params)
        .done(function(data) {
        })
        .fail(function(data) {
          console.log('FAILED', data);
        });

        $('button.sw-btn-prev').addClass('sw-btn-last');
      }

      if($('button.sw-btn-next').hasClass('disabled')){
        $('button.sw-btn-next').hide();
			}else{
        $('button.sw-btn-next').show();
			}

      return true;
    });

    $("#smartwizard").on("leaveStep", function(e, anchorObject, stepNumber, stepDirection) {
      if (stepDirection === 'forward' && stepNumber === 2) {
        if ($('input[name="availableTimeRadio"]').length > 0) {
          $('#form-3').validate({
            rules: { availableTimeRadio: { required: true } },
            messages: { availableTimeRadio: { required: 'Please select an available time.'} },
            errorElement: "em",
            errorPlacement: function ( error, element ) {
              error.addClass( "help-block" );
              element.parents( ".col-sm-5" ).addClass( "has-feedback" );
              error.insertAfter( element.parent( "div" ) );
              if ( !element.next( "span" )[ 0 ] ) {
                $( "<span class='glyphicon glyphicon-remove form-control-feedback'></span>" ).insertAfter( element );
              }
            },
          });

          return $('#form-3').valid();
        } else {
          alert('Please select an available date on calendar before continue.');
          return false;
        }
      } else if (stepDirection === 'forward' && stepNumber === 1) {
        $('#form-2').validate({
          focusInvalid: true,
          rules: {
            clientEmail: { required: true, minlength: 5 },
            clientName:  { required: true, minlength: 5 },
            clientPhone: { required: true, minlength: 6 },
            clientVideocallId: { required: { depends: function(e) {
              return $('input[name="serviceRadio"]:checked').val() === '2';
            } } },
            referenceSelector: { required: true },
            termsAndConditionsCheck: { required: true }
          },
          messages: { clientVideocallId: { required: 'This field is required if Videcall service is selected.'} },
          errorElement: "em",
          errorPlacement: function ( error, element ) {
            error.addClass( "help-block" );
            element.parents( ".col-sm-5" ).addClass( "has-feedback" );
            if ( element.prop( "type" ) === "checkbox" ) {
              error.insertAfter( element.parent( "div" ) );
            } else {
              error.insertAfter( element );
            }
            if ( !element.next( "span" )[ 0 ] ) {
              $( "<span class='glyphicon glyphicon-remove form-control-feedback'></span>" ).insertAfter( element );
            }
          },
          success: function ( label, element ) {
            // Add the span element, if doesn't exists, and apply the icon classes to it.
            if ( !$( element ).next( "span" )[ 0 ] ) {
              $( "<span class='glyphicon glyphicon-ok form-control-feedback'></span>" ).insertAfter( $( element ) );
            }
          },
          highlight: function ( element, errorClass, validClass ) {
            $( element ).parents( ".col-sm-5" ).addClass( "has-error" ).removeClass( "has-success" );
            $( element ).next( "span" ).addClass( "glyphicon-remove" ).removeClass( "glyphicon-ok" );
          },
          unhighlight: function ( element, errorClass, validClass ) {
            $( element ).parents( ".col-sm-5" ).addClass( "has-success" ).removeClass( "has-error" );
            $( element ).next( "span" ).addClass( "glyphicon-ok" ).removeClass( "glyphicon-remove" );
          }
        });
        return $('#form-2').valid();
      } else {
        return true;
      }
     });

     var endDate = new Date();
     endDate.setMonth(endDate.getMonth() + 2);
    $('#new_calendar').datepicker({
      format: "dd/mm/yyyy",
      maxViewMode: 1,
      keyboardNavigation: false,
      daysOfWeekDisabled: "0,6",
      startDate: new Date(),
      endDate: endDate,
      toggleActive: true
    }).on('changeDate', function(e) {
      if (e.date) {
        rebuildTimetable(e.format());
        $('#selectedDate').val(e.format());
      } else {
        $('#available-times-container').html(`
          <div class="alert alert-light" role="alert">
              Please, choose an available date on the calendar to the left and then select a time slot.
          </div>`);
      }
    })
  });
</script>
